import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'io.izzel.taboolib' version '1.3'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
}

group 'me.arasple.mc.trhologram'
version '2.0-BETA1'

task buildJar(dependsOn: [clean, shadowJar])

taboolib {
    tabooLibVersion = '5.54'
    loaderVersion = '2.11'
    classifier = null
    builtin = true
}

shadowJar {
    dependencies {
        include dependency('org.bstats:bstats-bukkit')
        include dependency('io.izzel.taboolib:TabooLibLoader')
    }
    relocate 'io.izzel.taboolib.loader', project.group + '.module.internal.boot'
    relocate 'org.bstats.bukkit', project.group + '.module.internal.service.bstats'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url 'https://repo.codemc.org/repository/maven-public' }
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib'
    compile 'ink.ptms.core:v11604:11604:all'
    compile 'ink.ptms.core:v11600:11600:all'
    compile 'ink.ptms.core:v11300:11300:all'
    compile 'ink.ptms.core:v11200:11200:all'
    compile 'ink.ptms.core:v10900:10900:all'
    compile 'me.clip:placeholderapi:2.10.9'
    compile 'org.bstats:bstats-bukkit:1.8'
    compileOnly fileTree(dir: 'libs', includes: ['*.jar'])
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'
        expand(
                name: rootProject.name,
                main: project.group + '.module.internal.boot.PluginBoot',
                version: project.version,
                libVersion: taboolib.tabooLibVersion,
                libDownload: true,
                loaderVersion: taboolib.loaderVersion,
                built: new SimpleDateFormat('yyyy-MM-dd HH:mm:ss').format(new Date()),
                builder: System.properties.getProperty('user.name'),
                os: System.properties.getProperty('os.name') + System.properties.getProperty('os.arch') + System.properties.getProperty('os.version')
        )
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xinline-classes"]
    }
}
